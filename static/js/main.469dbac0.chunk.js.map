{"version":3,"sources":["ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAkCeA,MA5Bf,SAAmBC,GACf,IACMD,EADMC,EAAMC,MACIC,KAAI,SAAAC,GAElB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OAAOC,GAAIH,EAAKI,IAAKC,MAAOL,EAAKM,KAC7CC,SACI,SAACC,GACGX,EAAMY,UAAUD,EAAEE,OAAOL,MAAML,EAAKI,QAGhD,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAC1CC,QAAU,kBAAIf,EAAMgB,WAAWb,EAAKI,cAVVJ,EAAKI,QAgB3C,OACI,8BACI,cAAC,IAAD,CAAUU,SAAU,IAAKC,OAAO,cAAhC,SACCnB,O,eCvBjBoB,IAAQC,IAAKC,K,IA2EEC,E,kDAxEb,WAAYtB,GAAO,IAAD,8BAChB,cAAMA,IACDuB,MAAM,CACTtB,MAAM,GACNuB,YAAY,CACVf,KAAK,GACLF,IAAI,KAGR,EAAKkB,YAAY,EAAKA,YAAYC,KAAjB,gBACjB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBACb,EAAKV,WAAW,EAAKA,WAAWU,KAAhB,gBAChB,EAAKd,UAAU,EAAKA,UAAUc,KAAf,gBAZC,E,wDAcNf,GACViB,KAAKC,SAAS,CACZL,YAAY,CACVf,KAAKE,EAAEE,OAAOL,MACdD,IAAIuB,KAAKC,W,8BAIPpB,GACNA,EAAEqB,iBACF,IAAMC,EAAQL,KAAKL,MAAMC,YACzB,GAAmB,KAAfS,EAAQxB,KAAU,CACpB,IAAMyB,EAAS,GAAD,mBAAKN,KAAKL,MAAMtB,OAAhB,CAAsBgC,IACpCL,KAAKC,SAAS,CACZ5B,MAAMiC,EACNV,YAAY,CACVf,KAAK,GACLF,IAAI,S,iCAKDA,GACT,IAAM4B,EAAcP,KAAKL,MAAMtB,MAAMmC,QAAO,SAAAjC,GAAI,OAC9CA,EAAKI,MAAMA,KACXqB,KAAKC,SAAS,CACZ5B,MAAMkC,M,gCAGF1B,EAAKF,GACb,IAAMN,EAAM2B,KAAKL,MAAMtB,MACvBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGdmB,KAAKC,SAAS,CACZ5B,MAAMA,M,+BAIR,OACE,sBAAKG,UAAU,MAAf,UACG,iCACE,uBAAME,GAAG,aAAa+B,SAAUT,KAAKD,QAArC,UACE,uBAAOtB,KAAK,OAAOiC,YAAY,aAAa9B,MAAOoB,KAAKL,MAAMC,YAAYf,KAAMC,SAC/EkB,KAAKH,cACN,wBAAQpB,KAAK,SAAb,sBAGJ,cAAC,EAAD,CAAWJ,MAAO2B,KAAKL,MAAMtB,MAC7Be,WAAYY,KAAKZ,WACjBJ,UAAWgB,KAAKhB,mB,GAnEP2B,IAAMC,WCITC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.469dbac0.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\nfunction ListItems(props){\r\n    const items=props.items;\r\n    const ListItems=items.map(item=>\r\n        {\r\n            return <div className=\"list\" key={item.key}>\r\n                <p>\r\n                    <input type=\"text\" id={item.key} value={item.text}\r\n                    onChange={\r\n                        (e)=>{\r\n                            props.setUpdate(e.target.value,item.key)\r\n                        }\r\n                    }></input>\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon='trash'\r\n                    onClick={ ()=>props.deleteItem(item.key)\r\n                    }></FontAwesomeIcon>\r\n                </span>\r\n                </p>\r\n            </div>\r\n        })\r\n        return(\r\n            <div>\r\n                <FlipMove duration={500} easing='ease-in-out'>\r\n                {ListItems}\r\n                </FlipMove>\r\n                </div>\r\n        )\r\n}\r\nexport default ListItems;","import React from 'react';\nimport './App.css';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add( faTrash );\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);      //base class is being called\n    this.state={\n      items:[],\n      currentItem:{\n        text:'',\n        key:''\n      }\n    }\n    this.handleInput=this.handleInput.bind(this);\n    this.addItem=this.addItem.bind(this);\n    this.deleteItem=this.deleteItem.bind(this);\n    this.setUpdate=this.setUpdate.bind(this);\n  }\n  handleInput(e){\n    this.setState({\n      currentItem:{\n        text:e.target.value,\n        key:Date.now()\n      }\n    })\n  }\n  addItem(e){\n    e.preventDefault();  //to avoid the page from getting refreshed\n    const newItem=this.state.currentItem;\n    if (newItem.text!==\"\"){\n      const newItems=[...this.state.items,newItem];\n      this.setState({\n        items:newItems,\n        currentItem:{\n          text:'',\n          key:''\n        }\n      })\n    }\n  }\n  deleteItem(key){\n    const filteredItems=this.state.items.filter(item=>\n      item.key!==key);\n      this.setState({ \n        items:filteredItems \n      })\n  }\n  setUpdate(text,key){\n    const items=this.state.items;\n    items.map(item =>{\n      if(item.key===key){\n        item.text=text;\n      }\n    })\n    this.setState({\n      items:items\n    })\n  }\n  render(){\n    return(\n      <div className=\"App\">\n         <header>\n           <form id=\"to-do-form\" onSubmit={this.addItem}>\n             <input type=\"text\" placeholder=\"Enter Text\" value={this.state.currentItem.text} onChange=\n             {this.handleInput}></input>\n             <button type=\"submit\">Add</button>\n            </form>\n         </header>\n         <ListItems items={this.state.items}\n         deleteItem={this.deleteItem}\n         setUpdate={this.setUpdate}></ListItems>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}